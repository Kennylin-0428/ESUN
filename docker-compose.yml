# 使用 Docker Compose v3 版本
version: '3.8'

# 定義所有服務
services:
  # MySQL 資料庫服務
  mysql:
    # 使用官方 MySQL 8.0 映像檔
    image: mysql:8.0
    # 設定容器名稱
    container_name: esun-mysql
    # 設定資料庫環境變數
    environment:
      # 設定 root 密碼
      MYSQL_ROOT_PASSWORD: root_password
      # 設定資料庫名稱
      MYSQL_DATABASE: esun
      # 設定使用者名稱
      MYSQL_USER: esun_user
      # 設定使用者密碼
      MYSQL_PASSWORD: esun_password
    # 將容器的 3306 埠對應到主機的 3306 埠
    ports:
      - "3306:3306"
    # 掛載資料夾以持久化資料庫資料
    volumes:
      - db-data:/var/lib/mysql
    # 啟動策略：除非手動停止，否則自動重啟
    restart: unless-stopped
  
  # 後端 Spring Boot 服務
  backend:
    # 從專案根目錄下的 Dockerfile 建立映像檔
    build:
      context: .
      dockerfile: Dockerfile
    # 設定容器名稱
    container_name: esun-backend
    # 將容器的 8080 埠對應到主機的 8080 埠
    ports:
      - "8080:8080"
    # 設定後端環境變數
    environment:
      # 資料庫連線 URL，使用服務名稱 'mysql' 作為主機名稱
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/esun?useSSL=false&serverTimezone=UTC
      # 資料庫使用者名稱
      SPRING_DATASOURCE_USERNAME: esun_user
      # 資料庫使用者密碼
      SPRING_DATASOURCE_PASSWORD: esun_password
    # 確保在啟動後端前，資料庫服務已準備好
    depends_on:
      - mysql
    # 啟動策略：除非手動停止，否則自動重啟
    restart: unless-stopped
  
  # 前端 Vue 3 服務
  frontend:
    # 從 frontend/vue 目錄下的 Dockerfile 建立映像檔
    build:
      context: ./frontend/vue
      dockerfile: Dockerfile
    # 設定容器名稱
    container_name: esun-frontend
    # 將容器的 80 埠對應到主機的 80 埠
    ports:
      - "80:80"
    # 確保在啟動前端前，後端服務已準備好
    depends_on:
      - backend
    # 啟動策略：除非手動停止，否則自動重啟
    restart: unless-stopped

# 定義卷 (Volume)
volumes:
  # 用於持久化 MySQL 資料
  db-data:
